package gr.uoa.di.storemanagement.web.product;

import gr.uoa.di.storemanagement.datalayer.entities.product.Product;
import gr.uoa.di.storemanagement.datalayer.entities.product.dao.ProductDaoImpl;
import gr.uoa.di.storemanagement.datalayer.entities.productstore.ProductStore;
import gr.uoa.di.storemanagement.datalayer.entities.productstore.dao.ProductStoreDaoImpl;
import gr.uoa.di.storemanagement.datalayer.entities.productsupplier.ProductSupplier;
import gr.uoa.di.storemanagement.datalayer.entities.productsupplier.dao.ProductSupplierDaoImpl;
import gr.uoa.di.storemanagement.datalayer.entities.store.dao.StoreDaoImpl;
import gr.uoa.di.storemanagement.datalayer.entities.supplier.dao.SupplierDaoImpl;
import gr.uoa.di.storemanagement.datalayer.entities.user.User;
import gr.uoa.di.storemanagement.datalayer.entities.user.dao.UserDaoImpl;
import gr.uoa.di.storemanagement.datalayer.entities.user.dao.UserSupplierDaoImpl;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

public class UpdateSupplierProduct extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	HttpSession session;
	
	private String productName;
	private String serialNumber;
	private String description;
	private int dimensions;
	private int mass;
	private String type;
	private int weight;
	private String supplierName;
	private int newQuantity;
	
	private User user;
	private Product product;
	private List<ProductStore> productStoresList;
	private ProductStore newProductStore;
	
	private UserSupplierDaoImpl userSupDao;
	private StoreDaoImpl storeDao;
	private SupplierDaoImpl supplierDao;
	private ProductDaoImpl productDao;
	private ProductStoreDaoImpl psDao;
	private ProductSupplierDaoImpl psupDao;

	private ServletContext context;
	private RequestDispatcher dispatcher;
	private String url;
  
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		storeDao = new StoreDaoImpl();
		productDao = new ProductDaoImpl();
		userSupDao = new UserSupplierDaoImpl();
		psupDao = new ProductSupplierDaoImpl();
		
		productName = request.getParameter("prname");
		if (productName == null) productName = "";

		serialNumber = request.getParameter("prserialnumber");
		if (serialNumber == null) serialNumber = "";
		
		description = request.getParameter("prdescription");
		if (description == null) description = "";
		
		if (request.getParameter("prdimension") != "") {
			dimensions = Integer.parseInt(request.getParameter("prdimension"));
		}
		else {
			dimensions = -1;
		}
		
		if (request.getParameter("prmass") != "") {
			mass = Integer.parseInt(request.getParameter("prmass"));
		}
		else {
			mass = -1;
		}
		
		if (request.getParameter("prweight") != "") {
			weight = Integer.parseInt(request.getParameter("prweight"));
		}
		else {
			weight = -1;
		}
		
		type = request.getParameter("prtype");
		if (type == null) type = "";
		
		
		product = productDao.readIt(productName, serialNumber);
		
		if (product == null) {
			url = "/ErrorPage.jsp";	
		}
		else {
			psDao = new ProductStoreDaoImpl();
		
			// get current supplier name
			session = request.getSession();
			user = (User) session.getAttribute("user");
			supplierName = userSupDao.getSupplierName(user.getUsername());

			productStoresList = psDao.getEverythingFromProductWithSupplier(productName, serialNumber, supplierName);
			
			for (ProductStore ps : productStoresList) {
				
				if (request.getParameter("checkbox" + ps.getStoreName()) != null) {
					if (request.getParameter("newQuantity" + ps.getStoreName()) != null) {
						if (request.getParameter("newQuantity" + ps.getStoreName()).equals("")) 
							newQuantity = 0;
						else 
							newQuantity = Integer.valueOf(request.getParameter("newQuantity" + ps.getStoreName()));

						if (newQuantity == 0) {
							psDao.delete(ps);
						}
						else {
							ps.setQuantity(newQuantity);
							psDao.update(ps);
						}

					}
				}
				
			}
			
			if (psDao.numberOfStoresWithThisProductAndThisSupplier(productName, serialNumber, supplierName) == 0) {
				psupDao.deleteIt(productName, serialNumber, supplierName);
			}
			
		}
		
		url = "/MyProduct";

		context = getServletContext();
		dispatcher = context.getRequestDispatcher(url);
		dispatcher.forward(request, response);		
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
